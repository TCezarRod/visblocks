{"version":3,"sources":["assets/images/bar_chart.svg","assets/images/scatter_plot.svg","assets/images/line_chart.svg","assets/images/map_pin.svg","assets/images/data.svg","assets/images/table.svg","assets/images/pie_chart.svg","reducers/visualization.reducer.js","constants/action-types.js","store.js","actions/index.js","Visualizations/ScatterPlot.js","Visualizations/LineChart.js","Visualizations/Histogram.js","Visualizations/MapVis.js","Visualizations/Data.js","Visualizations/Table.js","Visualizations/PieChart.js","Operations/Filter.js","Blocks/VisBlock.js","Edges/Path.js","Edges/EdgesCanvas.js","Layout/BlocksDrawer.js","Layout/ColorPicker.js","Layout/ControlDrawer.js","Layout/BuildingPage.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","controlState","connecting","sourceId","selected","options","arrowsState","lastId","arrows","dataState","data","blocksState","blocks","visualizationReducer","state","arguments","length","undefined","action","Object","assign","_ret","type","payload","id","xe","x","ye","y","v","objectSpread","xi","yi","keys","forEach","arrowKey","endBlock","arrow","startBlock","forwardId","push","forwardIndex","indexOf","splice","_action$payload$props","props","position","size","left","top","values","width","height","newId","block","defineProperty","isInput","input","delData","source","isSelection","selection","updateSel","blockOptions","attributes","attribute","newValues","value","store","createStore","arrowsReducer","deleteBlock","initOptions","updateAttrValues","updateAttrSelection","ScatterPlot","finishMutation","_this","onSelection","blockid","setState","externalMutations","groupBy","range","domain","componentDidMount","name","default","use default color","hidden","color","selection color","group by","group color","removeMutation","getDomain","domainIndex","minX","Math","min","apply","map","obj","Number","filter","n","isNaN","maxX","max","rangeIndex","updateOutput","points","bounds","_x","_y","eventKey","resetOutput","labelStyle","fill","fontFamily","fontSize","stroke","strokeWidth","textAnchor","this","react_default","a","createElement","victory_chart","externalEventMutations","theme","VictoryTheme","material","containerComponent","victory_selection_container","onSelectionCleared","domainPadding","victory_scatter","padding","style","active","selectionColor","baseColor","groupByOptions","useDefault","attrIndex","index","strokeDasharray","parseInt","datum","normalizedDatum","xAttr","yAttr","victory_axis","tickCount","label","gridComponent","line","display","axisLabelComponent","victory_label","dy","dependentAxis","angle","className","React","Component","getDerivedStateFromProps","newProps","prevState","mutations","childName","target","mutation","b","c","d","console","log","callback","Set","delete","colors","slice","Array","from","domainValues","rangeValues","NaNFields","element","key","includes","_loop","_i","iterable","i","connect","dispatch","LineChart","getDomainRange","victory_line","getBinData","last","binData","dimensionIndex","dimension","selectedDimension","bins","interval","_binData$push","find","bin","frequency","Histogram","xValues","renderContent","_this$props","selectionDimension","text","dx","fontWeight","victory_bar","barRatio","alignment","dimensionValues","OSM_URL","OSM_ATTRIBUTION","DEFAULT_LATLNG","lat","lng","marker","xmlns","viewBox","transform","MapVis","zoom","popup","pin size","default pin color","componentDidUpdate","refs","leafletElement","invalidateSize","findProp","prop","toLowerCase","replace","searchForLatLng","latLng","renderPopup","popupIndex","popupAttribute","pinSize","Popup","offset","L","Point","JSON","stringify","renderMarker","colorIndex","icon","divIcon","html","ReactDOMServer","renderToStaticMarkup","iconSize","Marker","concat","markers","mapBounds","latlng","Map","ref","center","minZoom","zoomControl","TileLayer","url","attribution","popupValues","Data","dataText","Typography_default","variant","Table","tableData","headers","updated","hidden columns","handleHotBeforeOnCellMouseDown","event","coords","row","stopImmediatePropagation","handleSelection","startRow","startColumn","endRow","endColumn","clearSelection","newDatum","react_handsontable_default","root","settings","colHeaders","rowHeaders","stretchH","afterSelectionEnd","afterDeselect","beforeOnCellMouseDown","readOnly","outsideClickDeselects","getHeadersFromData","some","col","getSliceData","sliceData","slices","others","elem","countUnique","PieChart","selectedData","getCurrentDimension","addSelected","newSelected","removeSelected","victory_pie","colorScale","_ret2","_loop2","_i3","_i2","Filter","filterBy","selectedFilters","filter by","filters","filterByValues","filterValues","defaultSelection","filteredValues","filteredData","VisBlock","prevSize","document","addEventListener","handleClick","e","node","contains","isConnecting","selectBlock","controlRef","handleClickOutside","selectedId","updateSize","dir","delta","moveBlock","updatePrevSize","updatePosition","renderChildrenWithProps","Children","children","child","cloneElement","handleBlockClick","connectionSource","onUpdate","finishConnect","handleConnectClick","startConnect","handleContextMenu","preventDefault","handleClose","getClassNames","csvLink","react_csv","filename","renderDownloadButton","classes","ButtonBase_default","button","aria-label","component","Save_default","renderHandle","blockName","onClick","Close_default","ArrowForward_default","noWrap","headerVisible","_this2","_this$state","minWidth","minHeight","lib","dragHandleClassName","onResize","onResizeStop","onDrag","zIndex","onContextMenu","renderNoData","defaultProps","withStyles","margin","spacing","unit","minLock","Path","hover","renderArrowHead","renderForwardPath","renderBackwardsPath","renderPath","hoverOn","hoverOff","getClassName","onMouseOver","onMouseLeave","EdgesCanvas","hasOwnProperty","Edges_Path","BlocksDrawer","Drawer_default","paper","drawerPaper","toolbar","List_default","Tooltip_default","title","placement","popper","ListItem_default","disableGutters","onCreateBlock","ListItemIcon_default","listIcons","src","DataIcon","alt","Divider_default","TableIcon","PieChartIcon","LineChartIcon","BarChartIcon","ScatterPlotIcon","PinIcon","listItemRoot","ListItemText_default","primary","listItemText","mixins","paddingLeft","ColorPicker","displayColorPicker","handleChange","rgb","onSelect","r","g","styles","reactCSS","borderRadius","background","swatch","boxShadow","cursor","popover","cover","right","bottom","Fragment","react_color_lib","onChange","capitalize","str","toUpperCase","ControlDrawer","handleToggleChange","onFieldChange","checked","handleFieldChange","handleColorChange","handleColorArrayChange","array","newArray","handleSelectChange","toConsumableArray","renderControls","TextField_default","select","fullWidth","SelectProps","native","InputLabelProps","shrink","option","index_es","transformOrigin","Layout_ColorPicker","control","marginTop","open","anchor","getData","originId","dataMap","originData","csvToJSON","csv","Papa","parse","header","trimHeaders","BuildingPage","controlDrawerOpen","handleKeyPress","createBlock","openFileDialog","handleDataFiles","addBlock","handleFiles","f","accept","onchange","click","remove","fileReader","FileReader","file","files","item","onload","handleLoadJson","handleLoadCsv","readAsText","content","result","updateData","updateBlockInput","updateBlockData","updateBlockSelection","renderVisualization","Visualizations_Data","Visualizations_ScatterPlot","Visualizations_LineChart","Visualizations_Histogram","Visualizations_MapVis","Visualizations_Table","Visualizations_PieChart","Operations_Filter","addInput","idInput","inputBlock","addArrow","renderBlock","Blocks_VisBlock","controls","renderComponents","handleOptionChange","AppBar_default","appBar","Toolbar_default","renderAppBar","Layout_BlocksDrawer","Edges_EdgesCanvas","Layout_ControlDrawer","oldState","inputId","flexGrow","overflow","drawer","backgroundColor","palette","render","es","Layout_BuildingPage","getElementById"],"mappings":"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","file":"static/js/main.5450b859.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bar_chart.58b0ada6.svg\";","module.exports = __webpack_public_path__ + \"static/media/scatter_plot.d510e4c9.svg\";","module.exports = __webpack_public_path__ + \"static/media/line_chart.4aa84470.svg\";","module.exports = __webpack_public_path__ + \"static/media/map_pin.7a5a7453.svg\";","module.exports = __webpack_public_path__ + \"static/media/data.76354149.svg\";","module.exports = __webpack_public_path__ + \"static/media/table.de925bed.svg\";","module.exports = __webpack_public_path__ + \"static/media/pie_chart.a546b0e2.svg\";","import { \n  MOVE_ARROW_END, \n  MOVE_ARROW_START,\n  ADD_ARROW,\n  DELETE_ARROW\n } from 'constants/action-types'\nimport { \n  MOVE_BLOCK,\n  CREATE_BLOCK,\n  DELETE_BLOCK,\n  UPDATE_DATA,\n  START_CONNECT,\n  FINISH_CONNECT,\n  SELECT_BLOCK,\n  INITIALIZE_OPTIONS,\n  UPDATE_ATTRIBUTE_SELECTION,\n  UPDATE_ATTRIBUTE_VALUES\n} from '../constants/action-types';\n\nconst initialState = {\n  controlState: {\n    connecting: false,\n    sourceId: -1,\n    selected: -1,\n    options: {} // \"id\": {attributes: [], ...'attribute': {type: string, values?: [], selected: string/{}}\n  },\n  arrowsState: {\n    lastId: 0,\n    arrows: {}        \n  },\n  dataState: {\n    data: {} // \"id\": {type: source/input, data: id/{data}, selection: {data}}\n  },\n  blocksState: {\n    lastId: 1,\n    blocks: {}\n  }\n}\n\nconst visualizationReducer = (state = initialState, action) => {\n  let arrows = Object.assign({}, state.arrowsState.arrows)\n  let blocks = Object.assign({}, state.blocksState.blocks)\n  let data = Object.assign({}, state.dataState.data)\n  let options = Object.assign({}, state.controlState.options)\n  switch (action.type) {\n    case MOVE_ARROW_END:\n      arrows[action.payload.id].xe = action.payload.x\n      arrows[action.payload.id].ye = action.payload.y\n      return {...state, arrowsState: {...state.arrowsState, arrows: arrows}}\n    case MOVE_ARROW_START:\n      arrows[action.payload.id].xi = action.payload.x\n      arrows[action.payload.id].yi = action.payload.y\n      return {...state, arrowsState: {...state.arrowsState, arrows: arrows}}\n    case ADD_ARROW:\n      Object.keys(arrows).forEach(arrowKey => {\n        if (arrows[arrowKey].endBlock === action.payload.arrow.endBlock) {\n          delete arrows[arrowKey]                   \n        }\n      })\n      if (!blocks[action.payload.arrow.startBlock].forwardId) blocks[action.payload.arrow.startBlock].forwardId = []\n      blocks[action.payload.arrow.startBlock].forwardId.push(action.payload.arrow.endBlock);\n      arrows[state.arrowsState.lastId] = action.payload.arrow;\n      return {...state, arrowsState: {...state.arrowsState, arrows: arrows, lastId: state.arrowsState.lastId+1}, blocksState: {...state.blocksState, blocks: blocks}}\n    case DELETE_ARROW:\n      let forwardIndex = blocks[arrows[action.payload.id]].forwardId.indexOf(arrows[action.payload.id].endBlock)\n      if (forwardIndex > -1) {\n        blocks[arrows[action.payload.id]].forwardId.splice(forwardIndex, 1)\n      }            \n      delete arrows[action.payload.id]\n      return {...state, arrowsState: {...state.arrowsState, arrows: arrows}, blocksState: {...state.blocksState, blocks: blocks}}\n    case MOVE_BLOCK:\n      const { position, size } = action.payload.props\n      blocks[action.payload.id].props.position = {left: position.x, top: position.y};\n      blocks[action.payload.id].props.size = size;\n      Object.values(arrows).forEach(arrow => {\n        if (arrow.startBlock === action.payload.id) {\n          arrow.xi = position.x + size.width\n          arrow.yi = position.y + size.height/2\n        }\n        if (arrow.endBlock === action.payload.id) {\n          arrow.xe = position.x\n          arrow.ye = position.y + size.height/2                    \n        }\n      })\n      return {...state, arrowsState: {...state.arrowsState, arrows: arrows}, blocksState: {...state.blocksState, blocks:blocks}}\n    case CREATE_BLOCK:\n      const newId = state.blocksState.lastId\n      blocks[newId] = {...action.payload.block, id: newId}\n      if (action.payload.data) {\n        data = {...data, [newId]: {data: action.payload.data}}\n        if (action.payload.isInput) {\n          data[newId].type = \"input\"\n          blocks[newId].input = action.payload.data\n        } else {\n          data[newId].type = \"data\"\n          blocks[newId].data = action.payload.data\n        }\n      }\n      return {...state, blocksState: {...state.blocksState, blocks: blocks, lastId: state.blocksState.lastId+1}, dataState: {...state.dataState, data: data}}\n    case DELETE_BLOCK:\n      let block = blocks[action.payload.id]\n      let delData = (id) => delete data[id]\n      while (block && (block.data || block.input) && block.forwardId && block.forwardId.length > 0) {\n        block.forwardId.forEach(id => delData(id))\n        block = block[block.forwardId]\n      }            \n      delete blocks[action.payload.id]\n      delete data[action.payload.id]\n      delete options[action.payload.id]\n      Object.keys(arrows).forEach(arrowKey => {\n        if (arrows[arrowKey].endBlock === action.payload.id|| arrows[arrowKey].startBlock === action.payload.id ) {\n          delete arrows[arrowKey]                   \n        }\n      })\n      return {...state, blocksState: {...state.blocksState, blocks: blocks}, arrowsState: {...state.arrowsState, arrows: arrows}, dataState: {...state.dataState, data: data}, controlState: {...state.controlState, options: options}}\n    case UPDATE_DATA:\n      const id = action.payload.id;\n      if (blocks[id]) {\n        data = {...data, [id]: {...data[id]}}\n        if (action.payload.isInput) {\n          data[id] = {type: 'input', data: action.payload.source};\n          blocks[id].input = action.payload.source\n        } else if (action.payload.isSelection) {\n          data[id].selection = action.payload.source\n          let block = blocks[id]\n          let updateSel = (id) => {if(data[id]) data[id].selection = []}\n          while (block && block.forwardId && block.forwardId.length > 0) {\n            block.forwardId.forEach(id => updateSel(id))\n            block = block[block.forwardId]\n          } \n        } else {\n          data[id] = {type: 'data', data: action.payload.source};\n          blocks[id].data = action.payload.source\n        }\n      }\n      return {...state, blocksState: {...state.blocksState, blocks: blocks}, dataState: {...state.dataState, data: data}}\n    case START_CONNECT:\n      return {...state, controlState: {...state.controlState, connecting: true, sourceId: action.payload.id, selected: action.payload.id}}\n    case FINISH_CONNECT:            \n      return {...state, controlState: {...state.controlState, connecting: false, sourceId: -1}}\n    case SELECT_BLOCK:\n      return {...state, controlState: {...state.controlState, selected: action.payload.id}}\n    case INITIALIZE_OPTIONS:\n      let blockOptions = Object.assign({attributes: []}, action.payload.attributes)\n      Object.keys(action.payload.attributes).forEach(attribute => {\n        blockOptions.attributes.push(attribute)\n        blockOptions[attribute].selected = undefined;\n      })\n      options[action.payload.id] = blockOptions\n      return {...state, controlState: {...state.controlState, options: options}}        \n    case UPDATE_ATTRIBUTE_VALUES:\n      options[action.payload.id][action.payload.attribute].values = action.payload.newValues\n      return {...state, controlState: {...state.controlState, options: options}}         \n    case UPDATE_ATTRIBUTE_SELECTION:\n      options[action.payload.id][action.payload.attribute].selected = action.payload.value\n      return {...state, controlState: {...state.controlState, options: options}}  \n\n    default:\n        return state\n  }\n}\n\nexport default visualizationReducer","export const MOVE_ARROW_END = \"MOVE_ARROW_END\";\nexport const MOVE_ARROW_START = \"MOVE_ARROW_START\";\nexport const ADD_ARROW = \"ADD_ARROW\";\nexport const DELETE_ARROW = \"ADD_ARROW\";\n\nexport const CREATE_BLOCK = \"CREATE_BLOCK\";\nexport const DELETE_BLOCK = \"DELETE_BLOCK\";\nexport const MOVE_BLOCK = \"MOVE_BLOCK\";\nexport const UPDATE_DATA = \"UPDATE_DATA\";\n\nexport const START_CONNECT = \"ENABLE_CONNECT\";\nexport const FINISH_CONNECT = \"FINISH_CONNECT\";\nexport const SELECT_BLOCK = \"SELECT_BLOCK\";\n\nexport const INITIALIZE_OPTIONS = \"INITIALIZE_OPTIONS\";\nexport const UPDATE_ATTRIBUTE_VALUES = \"UPDATE_ATTRIBUTE_VALUES\";\nexport const UPDATE_ATTRIBUTE_SELECTION = \"UPDATE_ATTRIBUTE_SELECTION\";","import { createStore } from \"redux\";\nimport arrowsReducer from \"reducers/visualization.reducer\";\n\nconst store = createStore(arrowsReducer);\n\nexport default store;","import { \n    MOVE_ARROW_END, \n    MOVE_ARROW_START,\n    ADD_ARROW,\n    DELETE_ARROW,\n    MOVE_BLOCK,\n    CREATE_BLOCK,\n    DELETE_BLOCK,\n    UPDATE_DATA,\n    START_CONNECT,\n    FINISH_CONNECT,\n    SELECT_BLOCK,\n    INITIALIZE_OPTIONS,\n    UPDATE_ATTRIBUTE_VALUES,\n    UPDATE_ATTRIBUTE_SELECTION\n} from \"../constants/action-types\";\n\nexport const moveArrowEnd = (id, position) => ({ type: MOVE_ARROW_END, payload: {...position, id:id} });\nexport const moveArrowStart = (id, position) => ({ type: MOVE_ARROW_START, payload: {...position, id:id} });\nexport const addArrow = arrow => ({ type: ADD_ARROW, payload: {arrow: arrow} });\nexport const deleteArrow = id => ({ type: DELETE_ARROW, payload: {id: id} });\n\nexport const moveBlock = (id, props) => ({ type: MOVE_BLOCK, payload: {id: id, props: props} });\nexport const createBlock = (block, data) => ({ type: CREATE_BLOCK, payload: {block: block, data: data}});\nexport const deleteBlock = id => ({ type: DELETE_BLOCK, payload: {id: id} });\nexport const updateBlockInput = (id, inputId) => ({ type: UPDATE_DATA, payload: {id: id, source: inputId, isInput: true} });\nexport const updateBlockSelection = (id, data) => ({ type: UPDATE_DATA, payload: {id: id, source: data, isSelection: true} });\nexport const updateBlockData = (id, data) => ({ type: UPDATE_DATA, payload: {id: id, source: data} });\n\nexport const startConnect = (sourceId) => ({ type: START_CONNECT, payload: {id: sourceId} });\nexport const finishConnect = () => ({ type: FINISH_CONNECT });\n\nexport const selectBlock = id => ({type: SELECT_BLOCK, payload: {id: id}})\n\nexport const initOptions = (id, attributes) => ({type: INITIALIZE_OPTIONS, payload: {id: id, attributes: attributes}})\nexport const updateAttrValues = (id, attribute, values) => ({type: UPDATE_ATTRIBUTE_VALUES, payload: {id: id, attribute: attribute, newValues: values}})\nexport const updateAttrSelection = (id, attribute, value) => ({type: UPDATE_ATTRIBUTE_SELECTION, payload: {id: id, attribute: attribute, value: value}})","import React  from 'react';\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { initOptions, updateAttrValues, updateAttrSelection } from 'actions'\n\nimport {\n  VictoryChart,\n  VictoryTheme,\n  VictoryScatter,\n  VictorySelectionContainer,\n  VictoryAxis,\n  VictoryLabel,\n  Line\n} from 'victory'\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    initOptions: (id, attributes) => dispatch(initOptions(id, attributes)),\n    updateAttrValues: (id, attribute, values) => dispatch(updateAttrValues(id, attribute, values)),\n    updateAttrSelection: (id, attribute, value) => dispatch(updateAttrSelection(id, attribute, value))\n  };\n};\n\nconst mapStateToProps = state => {\n  return { options: state.controlState.options };\n};\n\nconst countUnique = (iterable) => {\n  return new Set(iterable).size\n}\n\nclass ScatterPlot extends React.Component {\n  static propTypes = {\n    data: PropTypes.arrayOf(PropTypes.object),\n    width: PropTypes.number,\n    height: PropTypes.number,\n    onSelection: PropTypes.func\n  }\n\n  finishMutation = () => {\n    this.props.onSelection(this.props.blockid, {type: 'selection', data: this.props.data})\n    this.setState({externalMutations: undefined})\n  }\n\n  state = {\n    data: [],\n    groupBy: 0,\n    range: undefined,\n    domain: undefined,\n    externalMutations: undefined,\n    finishMutation: this.finishMutation\n  }\n\n  componentDidMount = () => {\n    this.props.initOptions(this.props.blockid, {\n      name: {\n        type: 'string',\n        default: 'Scatter Plot'\n      },\n      domain: {\n        type: 'selection',\n        values: [],\n        default: 0\n      },\n      range: {\n        type: 'selection',\n        values: [],\n        default: 1\n      },\n      size: {\n        type: 'number',\n        default: 6\n      },\n      'use default color': {\n        type: 'toggle',\n        default: true,\n        hidden: false \n      },\n      color: {\n        type: 'color',\n        default: 'rgba(100, 0, 40, 0.7)'\n      },\n      'selection color': {\n        type: 'color',\n        default: 'rgba(100, 200, 0, 0.7)'\n      },\n      'group by': {\n        type: 'selection',\n        values: [],\n        default: 0\n      },\n      'group color': {\n        type: 'colorArray',\n        default: ['#ff0029AA','#377eb8AA', '#66a61eAA', '#984ea3AA', '#00d2d5AA', '#ff7f00AA', '#af8d00AA', '#7f80cdAA', '#b3e900AA', '#c42e60AA'],\n        values: []\n      }\n    })\n  }\n\n  removeMutation = () => {\n    this.setState({\n      externalMutations: undefined\n    });\n  }\n\n  static getDerivedStateFromProps = (newProps, prevState) => {\n    const options = newProps.options[newProps.blockid]\n\n    let mutations = [{\n      childName: \"ScatterPlot\",\n      target: [\"data\"],\n      eventKey: \"all\",\n      mutation: (a,b,c,d) => {\n        a.active = false\n        console.log(\"mutation\")\n        return {active: false}\n      },\n      callback: prevState.finishMutation\n    }]\n    if (newProps.data && newProps.data !== prevState.data) {\n      let domainValues = []\n      let rangeValues = []\n      let NaNFields = []\n      Object.values(newProps.data).forEach(element => {\n        Object.keys(element).forEach(key => {\n          if (isNaN(element[key])) {\n            if (!NaNFields.includes(key) && element[key]) {\n              NaNFields.push(key)\n            }\n          } else {\n            if (!domainValues.includes(key) && element[key]) {\n              domainValues.push(key)\n            }\n            if (!rangeValues.includes(key) && element[key]) {\n              rangeValues.push(key)\n            }\n          }\n        })\n      })\n      for(let i=0; i<NaNFields.length; i++) {\n        if(countUnique(newProps.data.map(obj => obj[NaNFields[i]])) > 10) {\n          NaNFields.splice(i, 1)\n          i--;\n        }\n      }\n      newProps.updateAttrValues(newProps.blockid, 'domain', domainValues)\n      newProps.updateAttrValues(newProps.blockid, 'range', rangeValues)\n      newProps.updateAttrValues(newProps.blockid, 'group by', NaNFields)\n\n      return {...prevState, data: newProps.data, externalMutations: mutations, range: options['range'].default, domain: options['domain'].default}\n    } else if (newProps.data && options && options['group by'] && options['group by'].selected !== prevState.groupBy) {\n      const values = new Set(newProps.data.map(obj => obj[options['group by'].values[options['group by'].selected || options['group by'].default]]))\n      values.delete(undefined)\n      if (!values) options['use default color'].hidden = true\n      const colors = options['group color'].default.slice()\n\n      newProps.updateAttrValues(newProps.blockid, 'group color', Array.from(values))\n      newProps.updateAttrSelection(newProps.blockid, 'group color', colors)\n\n      return {...prevState, \n        data: newProps.data, \n        groupBy: options['group by'].selected, \n        externalMutations: mutations, \n        range: options['range'].selected || options['range'].default, \n        domain: options['domain'].selected || options['domain'].default}\n    } else if (newProps.data && options \n      && options['domain'] && options['range'] \n      && ((options['domain'].selected && options['domain'].selected !== prevState.domain) || (options['range'].selected && options['range'].selected !== prevState.range))\n    ) {\n      return {...prevState, \n        externalMutations: mutations, \n        range: options['range'].selected || options['range'].default, \n        domain: options['domain'].selected || options['domain'].default}\n    } else {\n      return {...prevState, externalMutations: undefined}\n    }\n  }\n\n  getDomain = () => {\n    const options = this.props.options[this.props.blockid]\n    const domainIndex = options.domain.selected || options.domain.default\n    const domain = options.domain.values[domainIndex]\n    let minX = Math.min.apply(Math, this.state.data.map((obj) => Number(obj[domain])).filter(n => !isNaN(n)))\n    let maxX = Math.max.apply(Math, this.state.data.map((obj) => Number(obj[domain])).filter(n => !isNaN(n)))\n\n    const rangeIndex = options.range.selected || options.range.default\n    const range = options.range.values[rangeIndex]\n    let minY = Math.min.apply(Math, this.state.data.map((obj) => Number(obj[range])).filter(n => !isNaN(n)))\n    let maxY = Math.max.apply(Math, this.state.data.map((obj) => Number(obj[range])).filter(n => !isNaN(n)))\n\n    return {x:[minX, maxX], y:[minY, maxY]}\n  }\n\n  updateOutput = (points, bounds, props) => {\n    points[0].data.forEach((data) => {\n      delete data._x; \n      delete data._y;\n      delete data.eventKey;\n      delete data.x;\n      delete data.y;\n    })\n    if (this.props.onSelection) {\n      this.props.onSelection(this.props.blockid, {type: 'selection', data: points[0].data})\n    }\n  }\n\n  resetOutput = () => {\n    if (this.props.onSelection) {\n      this.props.onSelection(this.props.blockid, {type: 'selection', data: []})\n    }\n  }\n\n  labelStyle = {\n    fill: 'rgb(69, 90, 100)',\n    fontFamily: 'Roboto, \"Helvetica Neue\", Helvetica, sans-serif',\n    fontSize: '12px',\n    stroke: 'transparent', \n    strokeWidth: '0',\n    textAnchor: 'middle'\n  }\n\n  render() {\n    const options = this.props.options[this.props.blockid]\n    const fillStyle = (data, active) => {\n      const selectionColor = (options['selection color'].selected || options['selection color'].default) \n      const baseColor = (options.color.selected || options.color.default)\n      const groupByOptions = options['group by']\n      const useDefault = options['use default color'].selected !== undefined \n      ? options['use default color'].selected\n      : options['use default color'].default\n      if (active) {\n        return selectionColor\n      } else if (groupByOptions && !useDefault) {\n        const attrIndex = groupByOptions.selected || groupByOptions.default\n        const value = data[groupByOptions.values[attrIndex]]\n        if (value) {\n          const index = options['group color'].values.indexOf(value)\n          if (index >= 0)\n            return options['group color'].selected[index]\n          else \n            return options['group color'].default\n        } else {\n          return baseColor\n        }\n      } else {\n        return baseColor\n      }\n    }\n    if (this.props.data) {\n      const domainIndex = options.domain.selected || options.domain.default\n      const rangeIndex = options.range.selected || options.range.default\n      return (\n        <VictoryChart \n          externalEventMutations= {this.state.externalMutations}\n          theme={VictoryTheme.material}\n          domain={this.getDomain()}\n          width={this.props.width}\n          height={this.props.height}\n          containerComponent={\n            <VictorySelectionContainer \n            onSelection={this.updateOutput} \n            onSelectionCleared={this.resetOutput}\n            />}\n          domainPadding={15}>\n          <VictoryScatter\n            name=\"ScatterPlot\"\n            externalEventMutations={this.externalMutations}\n            padding={150}\n            style={{ data: { fill: fillStyle, strokeDasharray: \"5,5\" } }}\n            size={parseInt((options.size.selected || options.size.default), 10)}\n            x={options.domain.values[domainIndex]}\n            y={options.range.values[rangeIndex]}\n            data={this.state.data.map(datum => {\n              let normalizedDatum = Object.assign({}, datum)\n              const xAttr = options.domain.values[domainIndex]\n              const yAttr = options.domain.values[rangeIndex]\n              normalizedDatum[xAttr] = Number(datum[xAttr])\n              normalizedDatum[yAttr] = Number(datum[yAttr])\n              return normalizedDatum\n            })}\n          />\n          <VictoryAxis \n            tickCount={5}\n            label={options.domain.values[domainIndex]} \n            gridComponent={<Line style={{display: 'none'}}/>}\n            axisLabelComponent={<VictoryLabel dy={15} style={this.labelStyle}/>}/>\n          <VictoryAxis dependentAxis \n            label={options.range.values[rangeIndex]} \n            axisLabelComponent={<VictoryLabel dy={-10} angle=\"90\" style={this.labelStyle}/>} \n            gridComponent={<Line style={{display: 'none'}}/>} />\n        </VictoryChart>\n      );\n    } else {\n      return <div className=\"content-text\"><span>No Data</span></div>\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ScatterPlot);\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { initOptions, updateAttrValues } from 'actions'\n\nimport {\n  VictoryChart,\n  VictoryTheme,\n  VictoryLine,\n  VictorySelectionContainer,\n  VictoryAxis,\n  VictoryLabel,\n  Line\n} from 'victory'\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    initOptions: (id, attributes) => dispatch(initOptions(id, attributes)),\n    updateAttrValues: (id, attribute, values) => dispatch(updateAttrValues(id, attribute, values))\n  };\n};\n\nconst mapStateToProps = state => {\n  return { options: state.controlState.options };\n};\n\nclass LineChart extends React.Component {\n  static propTypes = {\n    blockid: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    data: PropTypes.arrayOf(PropTypes.object),\n    width: PropTypes.number,\n    height: PropTypes.number\n  }\n\n  state = {\n    data: []\n  }\n\n  componentDidMount = () => {\n    this.props.initOptions(this.props.blockid, {\n      name: {\n        type: 'string',\n        default: 'Line Chart'\n      },\n      domain: {\n        type: 'selection',\n        values: [],\n        default: 0\n      },\n      range: {\n        type: 'selection',\n        values: [],\n        default: 1\n      },\n      color: {\n        type: 'color',\n        default: 'rgb(100, 0, 40)'\n      }\n    })\n  }\n\n  static getDerivedStateFromProps = (newProps, prevState) => {\n    if (newProps.data && newProps.data !== prevState.data) {\n      let domainValues = []\n      let rangeValues = []\n      Object.values(newProps.data).forEach(element => {\n        Object.keys(element).forEach(key => {\n          if (!isNaN(element[key])) {\n            if (!domainValues.includes(key) && element[key]) {\n              domainValues.push(key)\n            }\n            if (!rangeValues.includes(key) && element[key]) {\n              rangeValues.push(key)\n            }\n          }\n        })\n      })\n      newProps.updateAttrValues(newProps.blockid, 'domain', domainValues)\n      newProps.updateAttrValues(newProps.blockid, 'range', rangeValues)\n\n      return {...prevState, data: newProps.data}      \n    } else {\n      return {...prevState}\n    }\n  }\n\n  getDomainRange = () => {\n    const options = this.props.options[this.props.blockid]\n    const domainIndex = options.domain.selected || options.domain.default\n    const domain = options.domain.values[domainIndex]\n    let minX = Math.min.apply(Math, this.state.data.map((obj) => Number(obj[domain])).filter(n => !isNaN(n)))\n    let maxX = Math.max.apply(Math, this.state.data.map((obj) => Number(obj[domain])).filter(n => !isNaN(n)))\n\n    const rangeIndex = options.range.selected || options.range.default\n    const range = options.range.values[rangeIndex]\n    let minY = Math.min.apply(Math, this.state.data.map((obj) => Number(obj[range])).filter(n => !isNaN(n)))\n    let maxY = Math.max.apply(Math, this.state.data.map((obj) => Number(obj[range])).filter(n => !isNaN(n)))\n\n    return {x:[minX, maxX], y:[minY, maxY]}\n  }\n\n  render() {\n    const options = this.props.options[this.props.blockid]\n    if (this.props.data) {\n      const domainIndex = options.domain.selected || options.domain.default\n      const rangeIndex = options.range.selected || options.range.default\n      return (\n        <VictoryChart \n          theme={VictoryTheme.material}\n          domain={this.getDomainRange()}\n          width={this.props.width}\n          height={this.props.height}\n          containerComponent={<VictorySelectionContainer />}\n          domainPadding={5}>\n          <VictoryLine\n            \n            style={{ data: { stroke: (d, active) => active ? \"rgb(139,195,74)\" : (options.color.selected || options.color.default) } }}\n            x={options.domain.values[domainIndex]}\n            y={options.range.values[rangeIndex]}\n            data={this.state.data.map(datum => {\n              let normalizedDatum = Object.assign({}, datum)\n              const xAttr = options.domain.values[domainIndex]\n              const yAttr = options.domain.values[rangeIndex]\n              normalizedDatum[xAttr] = Number(datum[xAttr])\n              normalizedDatum[yAttr] = Number(datum[yAttr])\n              return normalizedDatum\n            })}      \n          />\n          <VictoryAxis \n            label={options.domain.values[domainIndex]} \n            gridComponent={<Line style={{display: 'none'}}/>}\n            axisLabelComponent={<VictoryLabel dy={15} style={this.labelStyle}/>}/>\n          <VictoryAxis dependentAxis \n            label={options.range.values[rangeIndex]} \n            axisLabelComponent={<VictoryLabel dy={-10} angle=\"90\" style={this.labelStyle}/>} \n            gridComponent={<Line style={{display: 'none'}}/>} />\n        </VictoryChart>\n      );\n    } else {\n      return <div className=\"content-text\"><span>No Data</span></div>\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LineChart);","import React from 'react';\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { initOptions, updateAttrValues } from 'actions'\n\nimport {\n  VictoryChart,\n  VictoryTheme,\n  VictoryBar,\n  VictorySelectionContainer,\n  VictoryLabel,\n  VictoryAxis,\n  Line\n} from 'victory'\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    initOptions: (id, attributes) => dispatch(initOptions(id, attributes)),\n    updateAttrValues: (id, attribute, values) => dispatch(updateAttrValues(id, attribute, values))\n  };\n};\n\nconst mapStateToProps = state => {\n  return { options: state.controlState.options };\n};\n\nconst getBinData = (data, options) => {\n  let binData = [];\n  const dimensionIndex = options.dimension.selected || options.dimension.default\n  const selectedDimension = options.dimension.values[dimensionIndex]\n\n  let bins = options.bins.selected || options.bins.default;\n\n  let minX = Math.min.apply(Math, data.map((obj) => Number(obj[selectedDimension])).filter(n => !isNaN(n)))\n  let maxX = Math.max.apply(Math, data.map((obj) => Number(obj[selectedDimension])).filter(n => !isNaN(n)))\n  let interval = (maxX - minX) / bins\n\n  let last;\n  for (let i = minX; i < maxX; i += interval) {\n    binData.push({\n      [selectedDimension]: i,\n      frequency: data.filter((data) => data[selectedDimension]>=i && data[selectedDimension]<(i+interval)).length,\n      interval: interval\n    })\n    last=i;\n  }\n  if (last + interval === maxX) {\n    binData.find((bin)=>bin[selectedDimension]===last).frequency += data.filter((data) => data[selectedDimension]===maxX).length\n  } \n   /*else {\n    let ticks = []\n    let count = {}\n    Object.values(data).forEach(obj => {\n      if (!ticks.includes(obj[selectedDimension])) {\n        ticks.push(obj[selectedDimension])\n        count[obj[selectedDimension]] = 1\n      } else {\n        count[obj[selectedDimension]] += 1\n      }\n    })\n\n    binData = Object.keys(count).map(key => {})\n  }*/\n\n  return binData\n}\n\nclass Histogram extends React.Component {\n  static propTypes = {\n    blockid: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    data: PropTypes.arrayOf(PropTypes.object),\n    width: PropTypes.number,\n    height: PropTypes.number\n  }\n\n  state = {\n    data: [],\n    binData: []\n  }\n\n  componentDidMount = () => {\n    this.props.initOptions(this.props.blockid, {\n      name: {\n        type: 'string',\n        default: 'Histogram'\n      },\n      dimension: {\n        type: 'selection',\n        values: [],\n        default: 0\n      },\n      bins: {\n        type: 'number',\n        default: 5\n      },\n      color: {\n        type: 'color',\n        default: 'rgb(100, 0, 40)'\n      },\n      'selection color': {\n        type: 'color',\n        default: 'rgba(100, 200, 0, 0.7)'\n      },\n    })\n  }\n\n  getDomain = () => {\n    const options = this.props.options[this.props.blockid]\n    const dimensionIndex = options.dimension.selected || options.dimension.default\n    const dimension = options.dimension.values[dimensionIndex]\n    const bins = options.bins.selected || options.bins.default\n    let minX = Math.min.apply(Math, this.state.binData.map((obj) => obj[dimension]))\n    let maxX = Math.max.apply(Math, this.state.binData.map((obj) => obj[dimension]))\n    let truMaxX = maxX + (maxX-minX)/bins\n\n    let maxY = Math.max.apply(Math, this.state.binData.map((obj) => obj.frequency))\n\n    return {x:[minX, truMaxX], y:[0, maxY]}\n  }\n\n  static getDerivedStateFromProps = (newProps, prevState) => {\n    const options = newProps.options[newProps.blockid]\n\n    if (newProps.data) {\n      if (newProps.data !== prevState.data) {\n        let dimensionValues = []\n        Object.values(newProps.data).forEach(element => {\n          Object.keys(element).forEach(key => {\n            if (!dimensionValues.includes(key) && !isNaN(element[key]) && element[key]) {\n              dimensionValues.push(key)\n            }\n          })\n        })\n        newProps.updateAttrValues(newProps.blockid, 'dimension', dimensionValues)\n\n        let binData = getBinData(newProps.data, options)\n\n        return {...prevState, binData: binData, data: newProps.data}\n      } else if (options && (options.bins.selected || options.dimension.selected)) {\n        let binData = getBinData(newProps.data, options)\n        return {...prevState, binData: binData, data: newProps.data}\n      } else {\n        return {...prevState}\n      }       \n    } else {\n      return {...prevState}\n    }\n  }\n\n  updateOutput = (points, bounds, props) => {\n    const xValues = points[0].data.map((obj) => Number(obj['_x']))\n    const interval = points[0].data[0].interval\n    const min = Math.min.apply(Math, xValues)\n    const max = Math.max.apply(Math, xValues) + interval\n    const options = this.props.options[this.props.blockid]\n\n    if (this.props.onSelection && this.props.data) {\n      const dimensionIndex = options.dimension.selected || options.dimension.default\n      const dimension = options.dimension.values[dimensionIndex]\n      this.props.onSelection(\n        this.props.blockid, \n        {\n          type: 'selection', \n          data: this.props.data.filter(datum => datum[dimension] >= min && datum[dimension] < max)\n        })\n    }\n  }\n\n  resetOutput = () => {\n    if (this.props.onSelection) {\n      this.props.onSelection(this.props.blockid, {type: 'selection', data: []})\n    }\n  }\n  \n  renderContent = () => {\n    const { width, height } = this.props\n    const options = this.props.options[this.props.blockid]\n    const fillStyle = (data, active) => {\n      const selectionColor = (options['selection color'].selected || options['selection color'].default) \n      const baseColor = (options.color.selected || options.color.default)\n      if (active) {\n        return selectionColor\n      } else {\n        return baseColor\n      }\n    }\n    if (this.props.data) {\n      const dimensionIndex = options.dimension.selected || options.dimension.default\n      return (<VictoryChart \n        theme={VictoryTheme.material}\n        domain={this.getDomain()}\n        width={width}\n        height={height}\n        containerComponent={<VictorySelectionContainer \n          selectionDimension=\"x\" \n          onSelection={this.updateOutput} \n          onSelectionCleared={this.resetOutput}/>}\n        domainPadding={5}>\n            <VictoryLabel text={options.dimension.values[dimensionIndex]} dy={50} dx={width-100} style={{fontSize: 12, fill: 'rgb(69, 90, 100)', fontWeight:'bold'}}/>\n            <VictoryBar \n              barRatio={1.1}\n              alignment=\"start\"\n              x={options.dimension.values[dimensionIndex]}\n              y={'frequency'}\n              data={this.state.binData}\n              style={{data: {fill: fillStyle}}}/>\n            <VictoryAxis  \n              gridComponent={<Line style={{display: 'none'}}/>}\n              />\n            <VictoryAxis dependentAxis \n              axisLabelComponent={<VictoryLabel dy={20}/>} \n              gridComponent={<Line style={{display: 'none'}}/>} \n              />\n      </VictoryChart>)\n    } else {\n      return <div className=\"content-text\"><span>No Data</span></div>\n    }\n  }\n\n  render() {\n    return (      \n      this.renderContent()        \n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Histogram);\n","import React from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { initOptions, updateAttrValues, updateAttrSelection } from 'actions'\n\nimport { \n  Map, \n  Marker, \n  TileLayer,\n  Popup\n} from 'react-leaflet'\n\nimport L from 'leaflet';\n\nconst OSM_URL = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\nconst OSM_ATTRIBUTION = '&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors'\nconst DEFAULT_LATLNG = {\n  lat: 0,\n  lng: 0\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    initOptions: (id, attributes) => dispatch(initOptions(id, attributes)),\n    updateAttrValues: (id, attribute, values) => dispatch(updateAttrValues(id, attribute, values)),\n    updateAttrSelection: (id, attribute, value) => dispatch(updateAttrSelection(id, attribute, value))\n  };\n};\n  \nconst mapStateToProps = state => {\n  return { options: state.controlState.options };\n};\n\nconst countUnique = (iterable) => {\n  return new Set(iterable).size\n}\n\nconst marker = (size, color) => {\n  return (<svg xmlns=\"http://www.w3.org/2000/svg\" width={size} height={size} viewBox=\"0 0 24 40\">\n    <path fill={color} d=\"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\" transform=\"translate(0, -2)\"/>\n    <path fill=\"none\" d=\"M0 0h24v20H0z\"/>\n  </svg>)\n}\n\nclass MapVis extends React.Component {\n  static propTypes = {\n    data: PropTypes.arrayOf(PropTypes.object),\n    width: PropTypes.number,\n    height: PropTypes.number\n  }\n\n  state = {\n    data: [],\n    zoom: 2\n  }\n\n  componentDidMount = () => {\n    this.props.initOptions(this.props.blockid, {\n      name: {\n        type: 'string',\n        default: 'Map'\n      },\n      popup: {\n        type: 'selection',\n        values: [],\n        default: 0\n      },\n      'pin size': {\n        type: 'number',\n        default: 25\n      },\n      'use default color': {\n        type: 'toggle',\n        default: true,\n        hidden: false \n      },\n      'default pin color': {\n        type: 'color',\n        default: '#0E1C3F'\n      },\n      'group by': {\n        type: 'selection',\n        values: [],\n        default: 0\n      },\n      'group color': {\n        type: 'colorArray',\n        default: ['#ff0029AA','#377eb8AA', '#66a61eAA', '#984ea3AA', '#00d2d5AA', '#ff7f00AA', '#af8d00AA', '#7f80cdAA', '#b3e900AA', '#c42e60AA'],\n        values: []\n      }\n    })\n  }\n\n  componentDidUpdate = () => {\n    if (this.refs.map) {\n      var map = this.refs.map.leafletElement;\n      map.invalidateSize();\n    }\n  }\n\n  static getDerivedStateFromProps = (newProps, prevState) => {\n    const options = newProps.options[newProps.blockid]\n    if (newProps.data && newProps.data !== prevState.data) {\n      let popupValues = []\n      let NaNFields = []\n      Object.values(newProps.data).forEach(element => {\n        Object.keys(element).forEach(key => {\n          if (isNaN(element[key])) {\n            if (!NaNFields.includes(key) && element[key]) {\n              NaNFields.push(key)\n            }\n          }\n          if (!popupValues.includes(key)) {\n            popupValues.push(key)\n          }\n        })\n      })\n      for(let i=0; i<NaNFields.length; i++) {\n        if(countUnique(newProps.data.map(obj => obj[NaNFields[i]])) > 10) {\n          NaNFields.splice(i, 1)\n          i--;\n        }\n      }\n      const values = new Set(newProps.data.map(obj => obj[NaNFields[options['group by'].default]]))\n      values.delete(undefined)\n      if (!values) options['use default color'].hidden = true\n      const colors = options['group color'].default.slice()\n\n      newProps.updateAttrValues(newProps.blockid, 'group by', NaNFields)\n      newProps.updateAttrValues(newProps.blockid, 'popup', popupValues)\n      newProps.updateAttrValues(newProps.blockid, 'group color', Array.from(values))\n      newProps.updateAttrSelection(newProps.blockid, 'group color', colors)\n\n      return {...prevState, data: newProps.data}\n    } else if (newProps.data && options && options['group by'] && options['group by'].selected !== prevState.groupBy) {\n      const values = new Set(newProps.data.map(obj => obj[options['group by'].values[options['group by'].selected || options['group by'].default]]))\n      values.delete(undefined)\n      if (!values) options['use default color'].hidden = true\n      const colors = options['group color'].default.slice()\n\n      newProps.updateAttrValues(newProps.blockid, 'group color', Array.from(values))\n      newProps.updateAttrSelection(newProps.blockid, 'group color', colors)\n      return {...prevState, data: newProps.data, groupBy: options['group by'].selected}\n    } else {\n      return {...prevState}\n    }\n  }\n\n  findProp = (obj, prop) => {\n    for(let key in obj) {\n      if (key.toLowerCase() === prop.toLowerCase()) {\n        return Number(obj[key].replace(/\"/g,\"\"))\n      }\n    }\n  }\n\n  searchForLatLng = (data) => {\n    let lat = this.findProp(data, 'lat') || this.findProp(data, 'latitude')\n    let lng = this.findProp(data, 'lng') || this.findProp(data, 'longitude')\n    if (lat && lng) {\n      return {lat: lat, lng: lng}\n    } else {\n      let latLng;\n      Object.values(data).forEach(value => {\n        if (value !== null && typeof value === 'object' && !latLng) {\n          latLng = this.searchForLatLng(value);\n        }\n      })\n      if (latLng) return latLng\n    }    \n  }\n\n  renderPopup = (data) => {\n    const options = this.props.options[this.props.blockid]\n    if (options) {\n      const popupIndex = options.popup.selected || options.popup.default\n      const popupAttribute = options.popup.values[popupIndex]\n      const value = data[popupAttribute]\n      const pinSize = options['pin size'].selected || options['pin size'].default;\n      return (<Popup offset={new L.Point(0, (0 - pinSize/2))} ><span><strong>{popupAttribute}</strong>: {value ? JSON.stringify(value) : '--'}</span></Popup>)\n    }\n  }  \n\n  renderMarker = (data, key) => {\n    let options = this.props.options[this.props.blockid]\n    let color;\n    if (options['use default color'].selected !== undefined ? options['use default color'].selected : options['use default color'].default ) {\n      color = options['default pin color'].selected || options['default pin color'].default\n    } else {\n      let dimension = options['group by'].values[options['group by'].selected || options['group by'].default]\n      if (data[dimension]) {\n        let colorIndex = options['group color'].values.indexOf(data[dimension])\n        color = (options['group color'].selected && options['group color'].selected[colorIndex]) \n        || options['group color'].default[colorIndex]\n      } else {\n        color = options['default pin color'].selected || options['default pin color'].default\n      }      \n    }\n    let size = options['pin size'].selected || options['pin size'].default\n    let icon = L.divIcon({\n      html: ReactDOMServer.renderToStaticMarkup(marker(size, color)),\n      iconSize: new L.Point(size, size)\n    })\n    let latLng = this.searchForLatLng(data);\n    if (latLng) {\n      return (\n        <Marker position={latLng} key={`${key}-${size}`} icon={icon}>\n          {this.renderPopup(data)}\n        </Marker>\n      )\n    }    \n  }\n\n  renderContent = () => {\n    const { width, height } = this.props\n    if (this.props.data) {  \n      const markers = this.state.data.map((data, index) => this.renderMarker(data, index)).filter(marker => marker !== undefined)\n      let mapBounds = this.state.data.map(data => this.searchForLatLng(data)).filter(latlng => latlng !== undefined)\n      return (\n      <Map \n        ref=\"map\" \n        center={DEFAULT_LATLNG}\n        zoom={this.state.zoom}\n        minZoom={1} \n        bounds={mapBounds.length ? mapBounds : undefined}\n        zoomControl={true}\n        height={height}\n        width={width}>\n        <TileLayer url={OSM_URL} attribution={OSM_ATTRIBUTION} />\n        {markers}\n      </Map>\n    )  \n    } else {\n      return <div className=\"content-text\"><span>No Data</span></div>\n    }\n  }\n\n  render() {\n    return (      \n      this.renderContent()        \n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MapVis);","import React from 'react';\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { initOptions } from 'actions'\n\nimport Typography from '@material-ui/core/Typography';\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    initOptions: (id, attributes) => dispatch(initOptions(id, attributes))\n  };\n};\n  \nconst mapStateToProps = state => {\n  return { options: state.controlState.options };\n};\n\nclass Data extends React.Component {\n  static propTypes = {\n    blockid: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    data: PropTypes.arrayOf(PropTypes.object)\n  }\n\n  state = {\n    data: []\n  }\n\n  componentDidMount = () => {\n    this.props.initOptions(this.props.blockid, {\n      name: {\n        type: 'string',\n        default: 'Data'\n      }\n    })\n  }\n  \n  renderContent = () => {\n    const blockOptions = this.props.options[this.props.blockid]\n    const dataText = (blockOptions && blockOptions.name) \n      ? (blockOptions.name.selected !== undefined ? blockOptions.name.selected : blockOptions.name.default) \n      : `Data`\n\n    return <div className=\"content-text\"><Typography variant=\"body2\" >{dataText}</Typography></div>\n  }\n\n  render() {\n    return (      \n      this.renderContent()        \n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Data);\n\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { initOptions, updateAttrValues } from 'actions'\n\nimport HotTable from 'react-handsontable';\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    initOptions: (id, attributes) => dispatch(initOptions(id, attributes)),\n    updateAttrValues: (id, attribute, values) => dispatch(updateAttrValues(id, attribute, values))\n  };\n};\n  \nconst mapStateToProps = state => {\n  return { options: state.controlState.options };\n};\n\nconst getHeadersFromData = (data) => {\n  let headers = []\n  Object.values(data).forEach(element => {\n    Object.keys(element).forEach(key => {\n      if (!headers.includes(key)) {\n        headers.push(key)\n      }\n    })\n  })\n  return headers\n}\n\nclass Table extends React.Component {\n  static propTypes = {\n    blockid: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    data: PropTypes.arrayOf(PropTypes.object),\n    onSelection: PropTypes.func\n  }\n\n  state = {\n    tableData: [],\n    data: [],\n    headers: [],\n    updated: false\n  }\n\n  componentDidMount = () => {\n    this.props.initOptions(this.props.blockid, {\n      name: {\n        type: 'string',\n        default: 'Table'\n      },\n      'hidden columns': {\n        type: 'multiple',\n        values: [],\n        default: []\n      }\n    })\n  }\n\n  componentDidUpdate = () => {\n    // Workaround to rerender the table when columns have changed\n    if (this.state.updated) {\n      this.setState({updated: false})\n    }\n  }\n\n  handleHotBeforeOnCellMouseDown = (event, coords, element) => {\n    if (coords.row < 0 ) {\n      event.stopImmediatePropagation();\n    }\n  }\n\n  handleSelection = (startRow, startColumn, endRow, endColumn) => {\n    this.props.onSelection(this.props.id, {type: 'selection', data: this.props.data.slice(startRow, endRow + 1)})\n  }\n\n  clearSelection = () => {\n    this.props.onSelection(this.props.id, {type: 'selection', data: []})\n  }\n\n  static getDerivedStateFromProps = (newProps, prevState) => {\n    const options = newProps.options[newProps.blockid]\n    let headers = newProps.data ? getHeadersFromData(newProps.data) : []\n    if (newProps.data && newProps.data !== prevState.data) {\n      newProps.updateAttrValues(newProps.blockid, 'hidden columns', headers.slice(0))\n\n      return {...prevState, data: newProps.data, tableData: newProps.data, headers: headers}\n    } else if (\n      // All of this to say there's been an update on selected columns\n      options \n      && options['hidden columns'].selected \n      && (options['hidden columns'].selected.some(col => prevState.headers.indexOf(col) >= 0)\n      || headers.some(col => prevState.headers.concat(options['hidden columns'].selected).indexOf(col) < 0))    \n    ) {\n      let data = Object.values(newProps.data).map(datum => {\n        let newDatum = Object.assign({}, datum)\n        options['hidden columns'].selected.forEach(col => {\n          delete newDatum[col]\n          const index = headers.indexOf(col)\n          if (index >= 0)\n            headers.splice(index, 1)\n        })\n        return newDatum\n      })\n\n      return {...prevState, data: newProps.data, tableData: data, headers: headers, updated: true}\n    } else {\n      return {...prevState}\n    }\n  }\n  \n  renderContent = () => {\n    if (this.props.data) {\n      const data = this.state.tableData.map(datum => {\n        let newDatum = Object.assign({}, datum)\n        Object.keys(newDatum).forEach(key => {\n          if (newDatum[key] !== null && typeof newDatum[key] === 'object')\n          newDatum[key] = JSON.stringify(newDatum[key])\n        })\n        return newDatum\n      })\n      return (<HotTable ref= \"table\"  \n        root={`table-${this.props.blockid}`}  \n        settings={{\n          data: data,\n          colHeaders: this.state.headers,\n          rowHeaders: true,\n          stretchH: 'all',\n          afterSelectionEnd: this.handleSelection,\n          afterDeselect: this.clearSelection,\n          beforeOnCellMouseDown: this.handleHotBeforeOnCellMouseDown,\n          readOnly: true,\n          outsideClickDeselects: false\n        }}     \n        \n        />)\n    } else {\n      return <div className=\"content-text\"><span>No Data</span></div>\n    }\n  }\n\n  render() {\n    return (      \n      this.renderContent()        \n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { initOptions, updateAttrValues, updateAttrSelection } from 'actions'\n\nimport {\n  VictoryPie\n} from 'victory'\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    initOptions: (id, attributes) => dispatch(initOptions(id, attributes)),\n    updateAttrValues: (id, attribute, values) => dispatch(updateAttrValues(id, attribute, values)),\n    updateAttrSelection: (id, attribute, value) => dispatch(updateAttrSelection(id, attribute, value))\n  };\n};\n\nconst mapStateToProps = state => {\n  return { options: state.controlState.options };\n};\n\nconst getSliceData = (data, dimension) => {\n  let sliceData = []\n  let slices = {'others': 0}\n\n  data.forEach(datum => {\n    let elem = datum[dimension]\n    if (!elem) {\n      slices.others++\n    } else {\n    if (slices[elem] !== undefined) {\n      slices[elem]++\n    } else {\n      slices[elem] = 1\n    }\n    }\n  })\n  if (slices.others===0) delete slices.others\n  Object.keys(slices).forEach(key => {\n    sliceData.push({'x': key, 'y': slices[key], label: `${key} [${slices[key]}]`})\n  })\n\n  return sliceData\n}\n\nconst countUnique = (iterable) => {\n  return new Set(iterable).size\n}\n\nclass PieChart extends React.Component {\n  static propTypes = {\n    blockid: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    data: PropTypes.arrayOf(PropTypes.object),\n    width: PropTypes.number,\n    height: PropTypes.number\n  }\n\n  state = {\n    data: [],\n    sliceData: [],\n    dimension: undefined,\n    selectedData: []\n  }\n\n  componentDidMount = () => {\n    this.props.initOptions(this.props.blockid, {\n      name: {\n        type: 'string',\n        default: 'Pie Chart'\n      },\n      dimension: {\n        type: 'selection',\n        values: [],\n        default: 0\n      },\n      'group color': {\n        type: 'colorArray',\n        default: ['#ff0029','#377eb8', '#66a61e', '#984ea3', '#00d2d5', '#ff7f00', '#af8d00', '#7f80cd', '#b3e900', '#c42e60'],\n        values: []\n      }\n    })\n  }\n\n  static getDerivedStateFromProps = (newProps, prevState) => {\n    const options = newProps.options[newProps.blockid]\n\n    if (newProps.data) {\n      if (newProps.data !== prevState.data) {\n        let dimensionValues = []\n        Object.values(newProps.data).forEach(element => {\n          Object.keys(element).forEach(key => {\n            if (!dimensionValues.includes(key) && isNaN(element[key]) && element[key]) {\n              dimensionValues.push(key)\n            }\n          })\n        })\n        for(let i=0; i<dimensionValues.length; i++) {\n          if(countUnique(newProps.data.map(obj => obj[dimensionValues[i]])) > 10) {\n            dimensionValues.splice(i, 1)\n            i--;\n          }\n        }\n\n        let sliceData = getSliceData(newProps.data, dimensionValues[options.dimension.default])\n        const values = Object.values(sliceData).map(data => data.x)\n\n        newProps.updateAttrValues(newProps.blockid, 'dimension', dimensionValues)\n        newProps.updateAttrValues(newProps.blockid, 'group color', Array.from(values))\n        newProps.updateAttrSelection(newProps.blockid, 'group color', options['group color'].default)\n\n        return {...prevState, sliceData: sliceData, data: newProps.data, dimension: options.dimension.default}\n      } else if (options && options.dimension.selected && options.dimension.selected !== prevState.dimension) {\n        let dimensionValues = []\n        Object.values(newProps.data).forEach(element => {\n          Object.keys(element).forEach(key => {\n            if (!dimensionValues.includes(key) && isNaN(element[key]) && element[key]) {\n              dimensionValues.push(key)\n            }\n          })\n        })\n        for(let i=0; i<dimensionValues.length; i++) {\n          if(countUnique(newProps.data.map(obj => obj[dimensionValues[i]])) > 10) {\n            dimensionValues.splice(i, 1)\n            i--;\n          }\n        }\n        let sliceData = getSliceData(newProps.data, dimensionValues[options.dimension.selected])\n\n        const values = Object.values(sliceData).map(data => data.x)\n\n        newProps.updateAttrValues(newProps.blockid, 'group color', Array.from(values))\n        return {...prevState, sliceData: sliceData, data: newProps.data, dimension: options.dimension.selected}\n      } else {\n        return {...prevState}\n      }       \n    } else {\n      return {...prevState}\n    }\n  }\n\n  getCurrentDimension = () => {\n    const options = this.props.options[this.props.blockid]\n    const dimensionIndex = options.dimension.selected || options.dimension.selected.default\n    return options.dimension.values[dimensionIndex]\n   }\n\n  addSelected = (value) => {\n    const dimension = this.getCurrentDimension()\n    const selectedData = this.props.data.filter(datum => datum[dimension] === value)\n    const newSelected = this.state.selected.concat[selectedData]\n    this.setState({selected: newSelected})\n  }\n\n  removeSelected = (value) => {\n    const dimension = this.getCurrentDimension()\n    const newSelected = this.state.selected.filter(datum => datum[dimension] !== value)\n    this.setState({selected: newSelected})\n  }\n  \n  renderContent = () => {\n    const options = this.props.options[this.props.blockid]\n    if (this.props.data) {\n      return (\n            <VictoryPie\n              colorScale={options['group color'].selected || options['group color'].default}\n              data={this.state.sliceData}\n            />\n      )\n    } else {\n      return <div className=\"content-text\"><span>No Data</span></div>\n    }\n  }\n\n  render() {\n    return (      \n      this.renderContent()        \n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PieChart);\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { initOptions, updateAttrValues, updateAttrSelection } from 'actions'\n\nimport Typography from '@material-ui/core/Typography';\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    initOptions: (id, attributes) => dispatch(initOptions(id, attributes)),\n    updateAttrValues: (id, attribute, values) => dispatch(updateAttrValues(id, attribute, values)),\n    updateAttrSelection: (id, attribute, value) => dispatch(updateAttrSelection(id, attribute, value))\n  };\n};\n  \nconst mapStateToProps = state => {\n  return { options: state.controlState.options };\n};\n\nclass Filter extends React.Component {\n  static propTypes = {\n    blockid: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    data: PropTypes.arrayOf(PropTypes.object),\n    onSelection: PropTypes.func\n  }\n\n  state = {\n    data: [],\n    filterBy: undefined,\n    selectedFilters: undefined\n  }\n\n  componentDidMount = () => {\n    this.props.initOptions(this.props.blockid, {\n      name: {\n        type: 'string',\n        default: 'Filter'\n      },\n      'filter by': {\n        type: 'selection',\n        values: [],\n        default: 0\n      },\n      'filters': {\n        type:'multiple',\n        values: [],\n        default: []\n      }\n    })\n  }\n\n  static getDerivedStateFromProps = (newProps, prevState) => {\n    const options = newProps.options[newProps.blockid]\n    if (newProps.data && newProps.data !== prevState.data) {\n      let filterByValues = []\n      Object.values(newProps.data).forEach(element => {\n        Object.keys(element).forEach(key => {\n          if (isNaN(element[key])) {\n            if (!filterByValues.includes(key) && element[key]) {\n              filterByValues.push(key)\n            }\n          }\n        })\n      })\n      let filterValues = []\n      let defaultSelection = filterByValues[options['filter by'].default]\n      Object.values(newProps.data).forEach(element => {\n        if (!filterValues.includes(element[defaultSelection])) {\n          filterValues.push(element[defaultSelection])\n        }\n      })\n\n      let selectedFilters = filterValues.slice()\n      newProps.updateAttrValues(newProps.blockid, 'filter by', filterByValues)\n      newProps.updateAttrValues(newProps.blockid, 'filters', filterValues)\n      newProps.updateAttrSelection(newProps.blockid, 'filters', selectedFilters)      \n\n      return {...prevState, data: newProps.data, filterBy: options['filter by'].default, selectedFilters: selectedFilters.slice()}\n    } else if (newProps.data && options && options['filter by'].selected && options['filter by'].selected !== prevState.filterBy) {\n      let filterValues = []\n      let selection = options['filter by'].values[options['filter by'].selected || options['filter by'].default]\n      Object.values(newProps.data).forEach(element => {\n        if (element[selection] && !filterValues.includes(element[selection])) {\n          filterValues.push(element[selection])\n        }\n      })\n\n      let selectedFilters = filterValues.slice()\n      newProps.updateAttrValues(newProps.blockid, 'filters', filterValues)\n      newProps.updateAttrSelection(newProps.blockid, 'filters', selectedFilters)\n      newProps.onSelection(newProps.blockid, {type: 'selection', data: newProps.data})\n      return {...prevState, data: newProps.data, filterBy: options['filter by'].selected, selectedFilters: selectedFilters.slice()}\n    } else if (\n      newProps.data \n      && options && options['filters'].selected \n      && (options['filters'].selected.some(filter => !prevState.selectedFilters.includes(filter))\n      || prevState.selectedFilters.some(filter => !options['filters'].selected.includes(filter)))) {\n      let dimension = options['filter by'].values[options['filter by'].selected || options['filter by'].default]\n      let filteredValues = options['filters'].selected || options['filters'].default\n      let filteredData = newProps.data.filter(datum => filteredValues.includes(datum[dimension]))\n      newProps.onSelection(newProps.blockid, {type: 'selection', data: filteredData})\n      return {...prevState, selectedFilters: filteredValues.slice()}\n    } else {\n      return {...prevState}\n    }\n  }\n  \n  renderContent = () => {\n    const blockOptions = this.props.options[this.props.blockid]\n    const dataText = (blockOptions && blockOptions.name) \n      ? (blockOptions.name.selected !== undefined ? blockOptions.name.selected : blockOptions.name.default) \n      : `Filter`\n\n    return <div className=\"content-text\"><Typography variant=\"body2\" >{dataText}</Typography></div>\n  }\n\n  render() {\n    return (      \n      this.renderContent()        \n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\n","import React  from 'react';\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { moveBlock, deleteBlock, startConnect, finishConnect, selectBlock } from 'actions'\n\nimport Typography from '@material-ui/core/Typography';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport { withStyles } from '@material-ui/core/styles';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SaveIcon from '@material-ui/icons/Save';\n\nimport Rnd from 'react-rnd';\n\nimport { CSVLink } from 'react-csv';\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit / 2\n  },\n  input: {\n    display: 'none'\n  }\n});\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    moveBlock: (id, props) => dispatch(moveBlock(id, props)),\n    deleteBlock: (id) => dispatch(deleteBlock(id)),\n    startConnect: (id) => dispatch(startConnect(id)),\n    finishConnect: () => dispatch(finishConnect()),\n    selectBlock: (id) => dispatch(selectBlock(id))\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    isConnecting: state.controlState.connecting, \n    connectionSource: state.controlState.sourceId, \n    selectedId: state.controlState.selected,\n    options: state.controlState.options \n  };\n};\n\nclass VisBlock extends React.Component {\n  static propTypes = {\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    left: PropTypes.number,\n    top: PropTypes.number,\n    width: PropTypes.number,\n    height: PropTypes.number,\n    minWidth: PropTypes.number,\n    minHeight: PropTypes.number,\n    headerVisible: PropTypes.bool\n  }\n\n  static defaultProps = {\n    minWidth: 150,\n    minHeight: 150,\n    headerVisible: true\n  }\n\n  state = {\n    position: {\n      top: this.props.top,\n      left: this.props.left\n    },\n    size: {\n      width: this.props.width,\n      height: this.props.height\n    },\n    prevSize: {\n      width: this.props.width,\n      height: this.props.height\n    }\n  }\n\n  renderNoData() {\n    return <span>Empty</span>;\n  }\n\n  componentDidMount = () => {\n    document.addEventListener('mousedown', this.handleClick, false)\n  }\n\n  handleClick = (e) => {\n    if (this.node && this.node.contains(e.target) && !this.props.isConnecting) {\n      this.props.selectBlock(this.props.id)\n    }\n\n    if ((this.node && !(this.node.contains(e.target))) && (this.props.controlRef && !this.props.controlRef.contains(e.target))) {\n      this.handleClickOutside()\n    }\n  }\n\n  handleClickOutside = () =>{\n    if (this.props.selectedId === this.props.id) {\n      this.props.selectBlock(-1)\n    }\n  }\n\n  updateSize = (e, dir, ref, delta, position) => {\n    this.props.moveBlock(this.props.id, {\n      size: {\n        width: this.state.prevSize.width + delta.width,\n        height: this.state.prevSize.height + delta.height\n      },\n      position: position\n    })\n    this.setState({\n      size:{\n        width: this.state.prevSize.width + delta.width,\n        height: this.state.prevSize.height + delta.height\n      },\n      position: {\n        top: position.y,\n        left: position.x\n      }\n    })\n  }\n\n  updatePrevSize = (e, dir, ref, delta, position) => {\n    this.setState({\n      prevSize:{\n        width: this.state.size.width,\n        height: this.state.size.height\n      }\n    })\n  }\n\n  updatePosition = (e, position) => {\n    this.props.moveBlock(this.props.id, {\n      size: this.state.size,\n      position: {\n        x: position.x,\n        y: position.y\n      }\n    })\n    this.setState({\n      position: {\n        top: position.y,\n        left: position.x\n      }\n    })\n  }\n\n  renderChildrenWithProps = () => {\n    return React.Children.map(this.props.children, child =>\n      React.cloneElement(child, {data:child.props.data, blockid: this.props.id, width: this.state.size.width, height: this.state.size.height }));\n  }\n\n  handleBlockClick = (event) => {\n    if (!this.props.isConnecting) {\n      this.props.selectBlock(this.props.id)\n    }\n\n    if (this.props.isConnecting && this.props.id !== this.props.connectionSource) {\n      this.props.onUpdate(this.props.id, this.props.connectionSource)\n      this.props.finishConnect()\n    }\n  }\n\n  handleConnectClick = () => {\n    this.props.startConnect(this.props.id);\n  }\n\n  handleContextMenu = (event) => {\n    event.preventDefault();\n    // TODO: create context menu\n  }\n\n  handleClose = () => {\n    this.props.deleteBlock(this.props.id);\n  }\n\n  getClassNames = () => {\n    let className = `container-block ${this.props.selectedId === this.props.id ? 'container-selected' : ''}`\n    return className\n  }\n\n  csvLink = (data, name) => props => {\n   return <CSVLink filename={name + \"_data.csv\"} data={data} {...props}/>\n  }\n\n  renderDownloadButton = (classes, data) => {\n    let options = this.props.options[this.props.id];\n    if (data && options) {\n      return (\n        <ButtonBase className={classes.button} aria-label=\"Download\" component={this.csvLink(data, options.name.selected || options.name.default)}>\n          <SaveIcon style={{ fontSize: 15 }}/>\n        </ButtonBase>)\n    }\n  }\n\n  renderHandle = () => {\n    const { classes } = this.props;\n    const blockOptions = this.props.options[this.props.id]\n    const blockName = (blockOptions && blockOptions.name) \n      ? (blockOptions.name.selected !== undefined ? blockOptions.name.selected : blockOptions.name.default) \n      : `Block ${this.props.id}`\n\n    return (\n    <div className=\"handle\" >\n    <ButtonBase className={classes.button} aria-label=\"Close\" onClick={this.handleClose}>\n      <CloseIcon style={{ fontSize: 15 }}/>\n    </ButtonBase>\n    <ButtonBase className={classes.button} aria-label=\"Arrow\" onClick={this.handleConnectClick}>\n      <ArrowForwardIcon style={{ fontSize: 15 }}/>\n    </ButtonBase>\n    {this.renderDownloadButton(classes, this.props.children.props.data)}\n    <div className=\"blockTitle\">\n      <Typography variant=\"subheading\" noWrap color=\"inherit\">\n        {this.props.headerVisible ? blockName : ''}\n      </Typography>\n    </div>\n    </div>)\n  }\n  \n  render() {\n    const { position, size } = this.state;\n    const { minWidth, minHeight } = this.props;\n    return (\n    <Rnd \n      default={{\n      x: position.left,\n      y: position.top,\n      width: (size.width > minWidth ? size.width : minWidth),\n      height: (size.height > minHeight ? size.height : minHeight),\n      }}\n      dragHandleClassName=\".handle\"\n      onResize={this.updateSize}\n      onResizeStop={this.updatePrevSize}\n      onDrag={this.updatePosition}\n      bounds= 'parent'\n      minWidth={minWidth}\n      minHeight={minHeight}\n      style={{zIndex:'1'}}\n      className={this.getClassNames()}\n    >\n      {/*<div className=\"port port-input\"></div>*/}\n      <div className={this.getClassNames()} onClick={this.handleBlockClick} onContextMenu={this.handleContextMenu} ref={node => this.node = node}>\n        {this.renderHandle()}\n        <div className=\"block-content\">\n          {this.props.children ? this.renderChildrenWithProps() : this.renderNoData()}\n        </div>\n      </div>\n    </Rnd>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(VisBlock));","import React  from 'react';\nimport PropTypes from 'prop-types'\n\nconst minLock = 30\nconst strokeWidth = 1\n\nclass Path extends React.Component {\n  static propTypes = {\n    xi: PropTypes.number,\n    yi: PropTypes.number,\n    xe: PropTypes.number,\n    ye: PropTypes.number\n  }\n\n  static defaultProps = {\n    xi: 0,\n    yi: 0,\n    xe: 0,\n    ye: 0\n  }\n\n  static getDerivedStateFromProps(newProps, prevState) {\n    return {...prevState, \n      xi: newProps.xi,\n      yi: newProps.yi,\n      dx:newProps.xe - newProps.xi, \n      dy:newProps.ye - newProps.yi\n    }\n  }\n\n  state = {\n    xi: this.props.xi,\n    yi: this.props.yi,\n    dx: this.props.xe - this.props.xi,\n    dy: this.props.ye - this.props.yi,\n    hover: false\n  }\n\n  renderArrowHead = (x, y) => {\n    return (\n      <path className='arrowHead'd={`\n        M ${x} ${y}\n        l -15 -5\n        l 0 10\n        Z\n      `} fill='rgb(100,100,100)'/>\n    )\n  }\n\n  renderForwardPath = (xi, yi, dx, dy) => {\n    return (\n      <path className='edge' d={`\n        M ${xi} ${yi} \n        c ${dx/2} 00 ${dx/2} 00 ${dx/2} ${dy/2} \n        c 00 ${dy/2} 00 ${dy/2} ${dx/2 -5} ${dy/2}\n      `} strokeWidth={strokeWidth} fill='none'/>\n    )\n  }\n\n  renderBackwardsPath = (xi, yi, dx, dy) => {\n    return (\n        <path className='edge' d={`\n        M ${xi} ${yi} \n        c ${minLock} 00 ${minLock} 00 ${minLock} ${dy/3}\n        c 0 ${dy/6} 0 ${dy/6} ${dx/2 - minLock} ${dy/6}\n        c ${dx/2 - minLock} 0 ${dx/2 - minLock} 0 ${dx/2 - minLock} ${dy/6}\n        c 0 ${dy/3} 0 ${dy/3} ${minLock - 5} ${dy/3}\n      `} strokeWidth={strokeWidth} fill='none'/>\n    )\n  }\n\n  renderPath = (xi, yi, dx, dy) => {\n    if (dx < minLock*2) {\n      return this.renderBackwardsPath(xi, yi, dx, dy)\n    } else {\n      return this.renderForwardPath(xi, yi, dx, dy)\n    }\n  }\n\n  hoverOn = () => {\n    this.setState({...this.state, hover:true})\n  }\n\n  hoverOff = () => {\n    this.setState({...this.state, hover:false})\n  }\n\n  getClassName = () => {\n    return (this.props.className || '')+(this.state.hover?'hover':'')\n  }\n\n  render () {\n    const { xi, yi, dx, dy } = this.state\n    return(\n      <g className={this.getClassName()} onMouseOver={this.hoverOn} onMouseLeave={this.hoverOff} stroke='rgb(120,120,120)'>\n        {this.renderPath(xi, yi, dx, dy)}\n        {this.renderArrowHead(xi + dx, yi + dy)}\n      </g>\n    )\n  }\n\n}\n\nexport default Path","import React  from 'react';\nimport { connect } from 'react-redux';\n\nimport Path from 'Edges/Path'\n\nconst mapStateToProps = state => {\n  return {arrows: state.arrowsState.arrows};\n};\n\nclass EdgesCanvas extends React.Component {\n  render() {\n    return (\n      <svg style={{ width: '100%', height: '100%', zIndex: '2'}}>\n        {\n          Object.keys(this.props.arrows)\n            .filter(id => this.props.arrows.hasOwnProperty(id))\n            .map(id => {            \n              return (\n                <Path \n                  key={id}\n                  xi={this.props.arrows[id].xi} \n                  yi={this.props.arrows[id].yi}\n                  xe={this.props.arrows[id].xe - 1} \n                  ye={this.props.arrows[id].ye}/>\n              )\n            }\n          )\n        }\n      </svg>\n    )\n  }\n\n}\n\nexport default connect(mapStateToProps)(EdgesCanvas)","import React from 'react';\nimport PropTypes from 'prop-types'\n\nimport Drawer from '@material-ui/core/Drawer';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { withStyles } from '@material-ui/core/styles';\n\n\nimport BarChartIcon from 'assets/images/bar_chart.svg'\nimport ScatterPlotIcon from 'assets/images/scatter_plot.svg'\nimport LineChartIcon from 'assets/images/line_chart.svg'\nimport PinIcon from 'assets/images/map_pin.svg'\nimport DataIcon from 'assets/images/data.svg'\nimport TableIcon from 'assets/images/table.svg'\nimport PieChartIcon from 'assets/images/pie_chart.svg'\n\nconst drawerWidth = 50\n\nconst styles = theme => ({\n  drawerPaper: {\n    position: 'relative',\n    width: drawerWidth,\n  },\n  toolbar: theme.mixins.toolbar,\n  popper: {\n    left: '30px !important',\n    top: '10px !important'\n  },\n  listIcons: {\n    margin: '0'\n  },\n  listItemRoot: {\n    paddingLeft: '7px'\n  },\n  listItemText: {\n    fontSize: '15px',\n    color: '#668'\n  }\n});\n\nclass BlocksDrawer extends React.Component {\n  static propTypes = {\n    onCreateBlock: PropTypes.func\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Drawer\n          variant=\"permanent\"\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          >\n          <div className={classes.toolbar} />\n          <List>\n            <Tooltip title=\"Add data\" placement=\"right\" classes={{popper: classes.popper}}>\n              <ListItem button disableGutters={true} onClick={() => this.props.onCreateBlock(\"Data\")}>             \n                <ListItemIcon classes={{root: classes.listIcons}}>\n                  <img src={DataIcon} width={45} alt=\"Data\"/>\n                </ListItemIcon>\n              </ListItem>\n            </Tooltip>\n            <Divider/>\n            <Tooltip title=\"Table\" placement=\"right\"  classes={{popper: classes.popper}}>\n              <ListItem button disableGutters={true} onClick={() => this.props.onCreateBlock(\"Table\")}>\n                <ListItemIcon classes={{root: classes.listIcons}}>\n                  <img src={TableIcon} width={45} alt=\"Table\"/>\n                </ListItemIcon>\n              </ListItem>\n            </Tooltip>\n            <Tooltip title=\"Pie Chart\" placement=\"right\"  classes={{popper: classes.popper}}>\n              <ListItem button disableGutters={true} onClick={() => this.props.onCreateBlock(\"PieChart\")}>\n                <ListItemIcon classes={{root: classes.listIcons}}>\n                  <img src={PieChartIcon} width={45} alt=\"PieChart\"/>\n                </ListItemIcon>\n              </ListItem>\n            </Tooltip>\n            <Tooltip title=\"Line Chart\" placement=\"right\"  classes={{popper: classes.popper}}>\n              <ListItem button disableGutters={true} onClick={() => this.props.onCreateBlock(\"LineChart\")}>\n                <ListItemIcon classes={{root: classes.listIcons}}>\n                  <img src={LineChartIcon} width={45} alt=\"LineChart\"/>\n                </ListItemIcon>\n              </ListItem>\n            </Tooltip>\n            <Tooltip title=\"Histogram\" placement=\"right\"  classes={{popper: classes.popper}}>\n              <ListItem button disableGutters={true} onClick={() => this.props.onCreateBlock(\"Histogram\")}>\n                <ListItemIcon classes={{root: classes.listIcons}}>\n                  <img src={BarChartIcon} width={45} alt=\"Histogram\"/>\n                </ListItemIcon>\n              </ListItem>\n            </Tooltip>\n            <Tooltip title=\"Scatter Plot\" placement=\"right\"  classes={{popper: classes.popper}}>\n              <ListItem button disableGutters={true} onClick={() => this.props.onCreateBlock(\"ScatterPlot\")}>\n                <ListItemIcon classes={{root: classes.listIcons}}>\n                  <img src={ScatterPlotIcon} width={45} alt=\"ScatterPlot\"/>\n                </ListItemIcon>\n              </ListItem>\n            </Tooltip>\n            <Tooltip title=\"Pin Map\" placement=\"right\"  classes={{popper: classes.popper}}>\n              <ListItem button disableGutters={true} onClick={() => this.props.onCreateBlock(\"Map\")}>\n                <ListItemIcon classes={{root: classes.listIcons}}>\n                  <img src={PinIcon} width={45} alt=\"Map\"/>\n                </ListItemIcon>\n              </ListItem>\n            </Tooltip>\n            <Divider/>\n            <ListItem button disableGutters={true} onClick={() => this.props.onCreateBlock(\"Filter\")}>\n              <ListItem button classes={{root: classes.listItemRoot}}>\n                <ListItemText classes={{primary: classes.listItemText}} primary=\"Filter\" />\n              </ListItem>\n            </ListItem>\n          </List>\n        </Drawer> \n    )\n  }\n}\n\nexport default withStyles(styles)(BlocksDrawer)","import React from 'react'\nimport PropTypes from 'prop-types'\nimport reactCSS from 'reactcss'\n\nimport { SketchPicker } from 'react-color'\n\nclass ColorPicker extends React.Component {\n  static propTypes = {\n    color: PropTypes.string,\n    onSelect: PropTypes.func\n  }\n\n  state = {\n    displayColorPicker: false\n  };\n\n  handleClick = () => {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker })\n  };\n\n  handleClose = () => {\n    this.setState({ displayColorPicker: false })\n  };\n\n  handleChange = (color) => {\n    const rgb = color.rgb\n    this.props.onSelect(`rgba(${rgb.r},${rgb.g},${rgb.b},${rgb.a})`);\n  };\n\n  render() {\n\n    const styles = reactCSS({\n      'default': {\n        color: {\n          width: '36px',\n          height: '14px',\n          borderRadius: '2px',\n          background: this.props.color,\n        },\n        swatch: {\n          width: 'fit-content',\n          padding: '5px',\n          background: '#fff',\n          borderRadius: '1px',\n          boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n          display: 'inline-block',\n          cursor: 'pointer',\n        },\n        popover: {\n          position: 'absolute',\n          zIndex: '2',\n        },\n        cover: {\n          position: 'fixed',\n          top: '0px',\n          right: '0px',\n          bottom: '0px',\n          left: '0px',\n        },\n      },\n    });\n\n    return (\n      <React.Fragment>\n        <div style={ styles.swatch } onClick={ this.handleClick }>\n          <div style={ styles.color } />\n        </div>\n        { this.state.displayColorPicker ? <div style={ styles.popover }>\n          <div style={ styles.cover } onClick={ this.handleClose }/>\n          <SketchPicker color={ this.props.color } onChange={ this.handleChange } />\n        </div> : null }\n      </React.Fragment>\n    )\n  }\n}\n\nexport default ColorPicker","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport ColorPicker from 'Layout/ColorPicker'\n\nimport Drawer from '@material-ui/core/Drawer'\nimport TextField from '@material-ui/core/TextField'\nimport { FormControl, FormLabel, FormControlLabel, FormGroup, Checkbox, Switch } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst drawerWidth = 250\n\nconst styles = theme => ({\n  drawerPaper: {\n    width: drawerWidth,\n    padding: '10px'\n  },\n  toolbar: theme.mixins.toolbar\n});\n\nconst capitalize = (str) => {\n  return str && str[0].toUpperCase() + str.slice(1);\n}\n\nclass ControlDrawer extends React.Component {\n  static propTypes = {\n    open: PropTypes.bool,\n    options: PropTypes.object,\n    onFieldChange: PropTypes.func\n  }\n\n  handleToggleChange = attribute => event => {\n    this.props.onFieldChange(attribute, event.target.checked)     \n  }\n\n  handleFieldChange = attribute => event => {\n    this.props.onFieldChange(attribute, event.target.value)\n  };\n\n  handleColorChange = attribute => color => {\n    this.props.onFieldChange(attribute, color)\n  }\n\n  handleColorArrayChange = (array, index, attribute) => color => {\n    let newArray = array ? array.slice() : []\n    newArray[index] = color\n    this.props.onFieldChange(attribute, newArray)\n\n  }\n\n  handleSelectChange = (attribute, values) => event => {\n    const value = event.target.value\n    if (values.includes(value)) {\n      let newValues = values\n      Object.keys(values).forEach(key => {\n        if(values[key] === value) newValues.splice(key, 1)\n      })\n      this.props.onFieldChange(attribute, newValues)\n    } else {\n      this.props.onFieldChange(attribute, [...values, value])\n    }\n  }\n\n  renderControls = () => {\n    const { options } = this.props\n    let controls = []\n    if (options) {\n      controls = options.attributes.map(attribute => {\n        switch (options[attribute].type) {\n          case 'string':\n            return (<TextField\n              key={attribute}\n              label={capitalize(attribute)}\n              value={options[attribute].selected !== undefined ? options[attribute].selected  : options[attribute].default}\n              onChange={this.handleFieldChange(attribute)}\n              margin=\"normal\"\n            />)\n          case 'selection':\n            if(options[attribute].values.length) {\n              return (<TextField\n                key={attribute}\n                select\n                fullWidth\n                label={capitalize(attribute)}\n                value={options[attribute].selected || options[attribute].default}\n                onChange={this.handleFieldChange(attribute)}\n                SelectProps={{\n                  native: true\n                }}\n                margin=\"normal\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              >\n                {options[attribute].values.map((option, index) => (\n                  <option key={option} value={index}>\n                    {option}\n                  </option>\n                ))}\n              </TextField>)\n            }\n            break\n          case 'color':\n            return (\n            <FormControl key = {attribute} fullWidth margin=\"normal\">\n                <FormLabel component=\"legend\" style={{transform: 'scale(0.75)',  transformOrigin: 'top left'}}>{capitalize(attribute)}</FormLabel>\n                <ColorPicker\n                  color ={ options[attribute].selected || options[attribute].default }\n                  onSelect = { this.handleColorChange(attribute) }/>\n            </FormControl>)\n          case 'number':\n            return (<TextField\n              key={attribute}\n              fullWidth\n              label={capitalize(attribute)}\n              value={options[attribute].selected || options[attribute].default}\n              onChange={this.handleFieldChange(attribute)}\n              type=\"number\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              margin=\"normal\"\n            />)\n          case 'multiple':\n            return (\n            <FormControl key={attribute} component=\"fieldset\" margin=\"normal\">\n              <FormLabel component=\"legend\" style={{transform: 'scale(0.75)',  transformOrigin: 'top left'}}>{capitalize(attribute)}</FormLabel>\n                <FormGroup>\n                  {options[attribute].values.map(value => \n                    <FormControlLabel\n                      key={value}\n                      control={\n                        <Checkbox\n                          checked={(options[attribute].selected || options[attribute].default).includes(value)}\n                          onChange={this.handleSelectChange(attribute, options[attribute].selected || options[attribute].default)}\n                          value={value}\n                        />\n                      }\n                      label={value}\n                    />)}\n              </FormGroup>\n            </FormControl>)\n          case 'colorArray': \n            if (options[attribute].values.length) {\n              return (\n                <FormControl component=\"fieldset\" margin=\"normal\">\n                  <FormLabel component=\"legend\" style={{transform: 'scale(0.75)',  transformOrigin: 'top left'}}>{capitalize(attribute)}</FormLabel>\n                  <FormGroup>\n                    {options[attribute].values.map((value, index) => {\n                      return (\n                        <FormControl key = {value} fullWidth style={{marginTop: '3px'}}>\n                            <FormLabel component=\"legend\" style={{transform: 'scale(0.75)',  transformOrigin: 'top left'}}>{value}</FormLabel>\n                            <ColorPicker\n                              color ={ (options[attribute].selected && options[attribute].selected[index]) || options[attribute].default[index] }\n                              onSelect = { this.handleColorArrayChange(options[attribute].selected, index, attribute) }/>\n                        </FormControl>)})}\n                  </FormGroup>\n                </FormControl>)\n            }\n            break\n          case 'toggle':\n          if (!options[attribute].hidden) {\n            return (\n              <FormControl margin=\"normal\" fullWidth>\n                <FormLabel component=\"legend\" style={{transform: 'scale(0.75)',  transformOrigin: 'top left'}}>{capitalize(attribute)}</FormLabel>\n                <Switch\n                  checked={options[attribute].selected !== undefined ? options[attribute].selected : options[attribute].default}\n                  onChange={this.handleToggleChange(attribute)}\n                  value={attribute}\n                />\n              </FormControl>)\n          }\n          break\n          default:\n            return null\n        }\n      })\n      return controls\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Drawer\n        open={this.props.open}\n        anchor=\"right\"\n        variant=\"persistent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}>\n        <div className={classes.toolbar} />\n        <div style={{height: '100%'}}>\n          {this.renderControls()}\n        </div>\n      </Drawer> \n    )\n  }\n}\n\nexport default withStyles(styles)(ControlDrawer)","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { \n  addArrow, \n  createBlock, \n  updateBlockInput, \n  updateBlockData, \n  updateBlockSelection, \n  updateAttrSelection,\n  deleteBlock\n} from \"actions\";\n\nimport ScatterPlot from 'Visualizations/ScatterPlot';\nimport LineChart from 'Visualizations/LineChart';\nimport Histogram from 'Visualizations/Histogram';\nimport Map from 'Visualizations/MapVis';\nimport Data from 'Visualizations/Data';\nimport Table from 'Visualizations/Table'\nimport PieChart from 'Visualizations/PieChart';\nimport Filter from 'Operations/Filter';\nimport VisBlock from 'Blocks/VisBlock';\nimport EdgesCanvas from 'Edges/EdgesCanvas';\nimport BlocksDrawer from 'Layout/BlocksDrawer';\nimport ControlDrawer from 'Layout/ControlDrawer';\n\nimport Papa from 'papaparse';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    zIndex: 1,\n    overflow: 'hidden',\n    position: 'relative',\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing.unit,\n    minWidth: 0, // So the Typography noWrap works\n  },\n  toolbar: theme.mixins.toolbar\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addArrow: arrow => dispatch(addArrow(arrow)),\n    createBlock: (block, data) => dispatch(createBlock(block, data)),\n    deleteBlock: (id) => dispatch(deleteBlock(id)),\n    updateBlockInput: (id, inputId) => dispatch(updateBlockInput(id, inputId)),\n    updateBlockData: (id, data) => dispatch(updateBlockData(id, data)),\n    updateBlockSelection: (id, data) => dispatch(updateBlockSelection(id, data)),\n    updateAttrSelection: (id, attribute, value) => dispatch(updateAttrSelection(id, attribute, value)),\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    blocks: state.blocksState.blocks, \n    dataMap: state.dataState.data,\n    options: state.controlState.options, \n    selectedId: state.controlState.selected\n  };\n};\n\nconst getData = (originId, dataMap) => {\n  const originData = dataMap[originId]\n\n  if (originData) {\n    let data\n    switch (originData.type) {\n      case 'data':\n        data = originData.data\n        break\n      case 'input':\n        data = getData(originData.data, dataMap)\n        break\n      default:\n        data = []\n        break\n    }\n    if (data && data.length && originData.selection && originData.selection.length > 0) {\n      data = originData.selection \n    }\n    return data\n  }\n}\n\nconst csvToJSON = (csv) => {\n  const parsedPapa = Papa.parse(csv, {header: true, trimHeaders: true})\n  return parsedPapa.data;\n}\n\nclass BuildingPage extends React.Component {\n  state = {\n    controlDrawerOpen: false\n  }\n\n  static getDerivedStateFromProps = (newProps, oldState) => {\n    const selectedId = newProps.selectedId\n    if (newProps.blocks[selectedId] && getData(selectedId, newProps.dataMap)) {\n      return {...oldState, controlDrawerOpen : true}\n    } else {\n      return {...oldState, controlDrawerOpen : false}\n    }\n\n  }\n\n  componentDidMount = () => {\n    //document.addEventListener(\"keydown\", this.handleKeyPress, false)\n  }\n\n  handleKeyPress = (event) => {\n    /*if (event.keyCode === 46 && this.props.selectedId >= 0) {\n      this.props.deleteBlock(this.props.selectedId)\n    }*/\n  }\n\n  createBlock = (type) => {\n    switch(type) {\n      case 'Data':\n        this.openFileDialog(this.handleDataFiles)\n      break\n      default:\n        this.addBlock(type)\n      break\n    }\n  }\n\n  openFileDialog = (handleFiles) => {\n    let f=document.createElement('input');\n    f.style.display='none';\n    f.type='file';\n    f.name='file';\n    f.accept=\".json, .csv\"\n    f.onchange=handleFiles\n    f.click();\n    f.remove();\n  }\n\n  handleDataFiles = (event) => {\n    let fileReader = new FileReader();\n    const file = event.target.files.item(0)\n    if (file.type === \"application/json\") {\n      fileReader.onload = (this.handleLoadJson)\n    } else if (file.type === \"text/csv\" || file.type === \"application/vnd.ms-excel\") {\n      fileReader.onload = (this.handleLoadCsv)\n    }      \n    fileReader.readAsText(event.target.files.item(0), 'UTF-8')\n  }\n\n  handleLoadCsv = (event) => {\n    let content = event.target.result;\n    let data = csvToJSON(content);\n    this.addBlock(\"Data\", 75, 50, data);\n  }\n\n  handleLoadJson = (event) => {\n    let content = event.target.result;\n    let data = JSON.parse(content);\n    this.addBlock(\"Data\", 75, 50, data);\n  }\n\n  addBlock = (type, width = 300, height = 200, data) => {\n    this.props.createBlock({\n      type: type,\n      props: {\n        position: {\n          top:  25,\n          left: 25\n        },\n        size: {\n          height: type==='Filter' ? 50 : height,\n          width: type==='Filter' ? 75 : width\n        }\n      }\n    }, data)\n  }\n\n  updateData = (id, data) => {\n    switch (data.type) {\n      case 'input':\n        this.props.updateBlockInput(id, data.data)\n        break\n      case 'data':\n        this.props.updateBlockData(id, data.data)\n        break\n      case 'selection':\n        this.props.updateBlockSelection(id, data.data)\n        break\n      default:\n        return\n    }\n  }  \n\n  renderVisualization = (id, type, data, props) => {\n    switch(type) {\n      case 'Data':        \n        return(<Data \n          id = {id}\n          data = {data}/>)\n      case 'ScatterPlot':\n        return <ScatterPlot \n          id = {id}\n          data={data} \n          onSelection={this.updateData}/> \n      case 'LineChart':\n        return <LineChart \n          id = {id}\n          data={data} />\n      case 'Histogram':\n        return <Histogram \n          data={data}\n          onSelection={this.updateData}/>         \n      case 'Map':\n        return <Map \n          id = {id}\n          data={data}/>\n      case 'Table':\n        return <Table \n          id = {id}\n          data={data}\n          onSelection={this.updateData}/>\n      case 'PieChart':\n        return <PieChart\n          data = {data}/>\n      case 'Filter':\n        return <Filter\n          data = {data}\n          onSelection={this.updateData}/>\n      default:\n        return <React.Fragment/>\n    }\n  }\n\n  addInput = (id, idInput) => {\n    let block = this.props.blocks[id]\n    let inputBlock = this.props.blocks[idInput]\n    this.props.updateBlockInput(id, idInput)\n\n    this.props.addArrow({\n      xi:inputBlock.props.position.left + inputBlock.props.size.width,\n      yi:inputBlock.props.position.top + inputBlock.props.size.height/2,\n      xe: block.props.position.left,\n      ye: block.props.position.top + block.props.size.height/2,\n      startBlock: inputBlock.id,\n      endBlock: block.id\n    })\n  }\n\n  renderBlock = (block) => { \n    // TODO: render different if data \n    let headerVisible = true\n    let minWidth\n    let minHeight\n    if (block.type === 'Data' || block.type === 'Filter') {\n      headerVisible = false\n      minWidth = minHeight = 50\n    }\n    return (<VisBlock\n      key={block.id}\n      id={block.id}\n      dimension={block.props.dimension} \n      top={block.props.position.top}\n      left={block.props.position.left}\n      width={block.props.size.width}\n      height={block.props.size.height}\n      minWidth={minWidth}\n      minHeight={minHeight}\n      headerVisible={headerVisible}\n      onUpdate={this.addInput}\n      controlRef={this.refs.controls}>\n      {this.renderVisualization(block.id, block.type, block.data || getData(block.input, this.props.dataMap), block.props)}\n      </VisBlock>)    \n  }\n\n  renderComponents = () => {\n    return Object.values(this.props.blocks).map(block => this.renderBlock(block))\n  }\n\n  renderAppBar() {\n    const { classes } = this.props;\n    return (\n    <AppBar position='absolute' color='default' className={classes.appBar}>\n      <Toolbar className={classes.toolbar}>\n        <Typography variant=\"title\" color=\"primary\" noWrap>\n          VisBlocks\n        </Typography>\n      </Toolbar>\n    </AppBar>)\n  }\n\n  handleOptionChange = (attribute, value) => {\n    this.props.updateAttrSelection(this.props.selectedId, attribute, value)\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        {this.renderAppBar()}\n        <BlocksDrawer onCreateBlock={this.createBlock}/>\n        <main className={classes.content}>\n          <div className={classes.toolbar} />  \n          <div className=\"workArea\"> \n            {this.renderComponents()}\n            <EdgesCanvas/>\n          </div>\n        </main>\n        <div ref=\"controls\">\n          <ControlDrawer\n            open={this.state.controlDrawerOpen}\n            options={this.props.options[this.props.selectedId]}\n            onFieldChange={this.handleOptionChange} />\n        </div>\n      </div>      \n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(BuildingPage))\n","import React from 'react';\nimport { render } from 'react-dom'\nimport { Provider } from \"react-redux\";\nimport store from \"store\";\nimport 'assets/styles/css/index.css';\n\nimport BuildingPage from 'Layout/BuildingPage';\n\nrender(\n    <Provider store={store}>\n        <BuildingPage/>\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}